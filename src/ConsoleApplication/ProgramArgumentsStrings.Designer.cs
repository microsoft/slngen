//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SlnGen {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class ProgramArgumentsStrings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal ProgramArgumentsStrings() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SlnGen.ProgramArgumentsStrings", typeof(ProgramArgumentsStrings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Read arguments from a file..
        /// </summary>
        internal static string ArgFileArgumentDescription {
            get {
                return ResourceManager.GetString("ArgFileArgumentDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}: Argument contains unmatched quote..
        /// </summary>
        internal static string ArgumentContainsUnmatchedQuote {
            get {
                return ResourceManager.GetString("ArgumentContainsUnmatchedQuote", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only supporting array collections today..
        /// </summary>
        internal static string ArrayCollectionsSupported {
            get {
                return ResourceManager.GetString("ArrayCollectionsSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}: Cannot set argument multiple times..
        /// </summary>
        internal static string CannotSetArgumentMultipleTimes {
            get {
                return ResourceManager.GetString("CannotSetArgumentMultipleTimes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Projects can contribute companion files to the generated solution by adding files to SlnGenCompanionFile msbuild Items.  A companion file is one that must sit next to the solution on the file system and optionally has the generated solution&apos;s name as part of its own name.
        ///The companion file&apos;s name can be generated from the solution name by specifying a format string via the TargetNamePattern item Metadata.  A typical scenario is copying over a global .sln.DotSettings (ReSharper settings) file that&apos;s checke [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CompanionFilesDescription {
            get {
                return ResourceManager.GetString("CompanionFilesDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default:.
        /// </summary>
        internal static string Default {
            get {
                return ResourceManager.GetString("Default", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}: File not found..
        /// </summary>
        internal static string FileNotFound {
            get {
                return ResourceManager.GetString("FileNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show usage..
        /// </summary>
        internal static string HelpArgumentDescription {
            get {
                return ResourceManager.GetString("HelpArgumentDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}: Missing switch value..
        /// </summary>
        internal static string MissingSwitchValue {
            get {
                return ResourceManager.GetString("MissingSwitchValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No matching positional argument for value: {0}..
        /// </summary>
        internal static string NoMatchingPositionalArgument {
            get {
                return ResourceManager.GetString("NoMatchingPositionalArgument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}: Required argument not set. Check ShouldShowUsageAndExit..
        /// </summary>
        internal static string RequiredArgumentNotSet {
            get {
                return ResourceManager.GetString("RequiredArgumentNotSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reserved char &apos;{0}&apos; in argument &apos;{1}&apos;.
        /// </summary>
        internal static string ReservedCharacterInArgument {
            get {
                return ResourceManager.GetString("ReservedCharacterInArgument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Short form:.
        /// </summary>
        internal static string ShortForm {
            get {
                return ResourceManager.GetString("ShortForm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Short forms:.
        /// </summary>
        internal static string ShortForms {
            get {
                return ResourceManager.GetString("ShortForms", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Projects can contribute solution items to the generated solution by adding files to @(SlnGenSolutionItem).  A typical scenario is to include global .testsettings files that are checked into the enlistment..
        /// </summary>
        internal static string SolutionItemsDescription {
            get {
                return ResourceManager.GetString("SolutionItemsDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}: Unknown switch argument..
        /// </summary>
        internal static string UnknownArgument {
            get {
                return ResourceManager.GetString("UnknownArgument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Usage: .
        /// </summary>
        internal static string Usage {
            get {
                return ResourceManager.GetString("Usage", resourceCulture);
            }
        }
    }
}

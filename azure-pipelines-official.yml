resources:
  repositories:
  - repository: MicroBuildTemplate
    type: git
    name: 1ESPipelineTemplates/MicroBuildTemplate
    ref: refs/tags/release
variables:
  LogDirectory: $(Build.ArtifactStagingDirectory)/logs
  ArtifactsDirectory: artifacts
  BuildConfiguration: 'Release'
  BuildPlatform: 'Any CPU'
  MSBuildArgs: '"/Property:Platform=$(BuildPlatform);Configuration=$(BuildConfiguration)" "/BinaryLogger:$(Build.SourcesDirectory)\$(ArtifactsDirectory)\msbuild.binlog"'
  SignType: 'Real'
trigger:
  batch: true
  branches:
    include:
    - 'main'
    - 'refs/tags/*'
  paths:
    exclude:
    - '*.md'
pr: none
extends:
  template: azure-pipelines/MicroBuild.1ES.Official.yml@MicroBuildTemplate
  parameters:
    sdl:
      sbom:
        enabled: false
    pool:
      name: VSEngSS-MicroBuild2022-1ES
      demands:
      - msbuild
      - visualstudio
      os: windows
    stages:
    - stage: ''
      displayName: 'Build'
      jobs:
      - job: Build
        displayName: 'Build'
        pool:
          name: 'VSEngSS-MicroBuild2022-1ES'
        templateContext:
          mb:
            signing:
              enabled: true
              signType: $(SignType)
              zipSources: false
          outputs:
          - output: pipelineArtifact
            displayName: 'Publish Artifacts'
            condition: always()
            targetPath: $(ArtifactsDirectory)
            artifactName: 'artifacts'
          - output: nuget
            displayName: 'Push NuGet Packages to nuget.org'
            condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/v'))
            packageParentPath: '$(ArtifactsDirectory)'
            packagesToPush: '$(ArtifactsDirectory)/**/Microsoft.VisualStudio.SlnGen*.nupkg'
            nuGetFeedType: 'external'
            publishFeedCredentials: 'NuGet-1ES-Full'
          - output: nuget
            displayName: 'Push SlnGen.Corext'
            condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/v'))
            packageParentPath: '$(ArtifactsDirectory)'
            packagesToPush: '$(ArtifactsDirectory)/**/SlnGen.Corext*.nupkg'
            nuGetFeedType: 'external'
            publishFeedCredentials: 'CloudBuild-Push'
        steps:
        - script: 'echo ##vso[task.setvariable variable=SignType;]Real'
          displayName: 'Set SignType to Real for tagged commits'
          condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/v'))
        - task: UseDotNet@2
          displayName: 'Install .NET 8.x'
          inputs:
            version: '8.x'
        - task: UseDotNet@2
          displayName: 'Install .NET 9.x'
          inputs:
            version: '9.x'
            includePreviewVersions: true
        - task: VSBuild@1
          displayName: 'Build Solution'
          inputs:
            solution: '**\*.sln'
            msbuildArgs: '$(MSBuildArgs)'
        - task: AzureCLI@2
          displayName: 'Push SlnGen.Corext'
          inputs:
            azureSubscription: 'CloudBuild-Push-v2'
            scriptType: 'pscore'
            scriptLocation: 'inlineScript'
            inlineScript: |
              # Get an access token for Azure DevOp (resource id is for AzDO)
              $accessToken = az account get-access-token --query accessToken --resource 499b84ac-1321-427f-aa17-267ca6975798 -o tsv

              # Set the access token as a secret, so it doesn't get leaked in the logs
              Write-Host "##vso[task.setsecret]$accessToken"

              # Override the apitoken of the nuget service connection, for the duration of this stage
              # Service connection is for "microsoft.slngen Official"
              Write-Host "##vso[task.setendpoint id=d8767bc1-a109-4cb7-80c2-6ac1ebf4346e;field=authParameter;key=apitoken]$accessToken"
